version: '3.8'
x-node-common:
  &node-base
  depends_on:
    kafka:
      condition: service_healthy
  networks:
    - internal_network
  restart: on-failure
# -----------------------------------------------
networks:
  internal_network:
    driver: bridge
# -----------------------------------------------
# -----------------------------------------------
services:

# -----------------------------------------------
  micro-account:
    <<: *node-base
    build:
      context: ../../services/account
      dockerfile: ../../deploy/test/Dockerfile
    volumes:
      - ../../services/account/src:/usr/app/src
    command: /bin/sh -c "npm run start:dev"
    
# -----------------------------------------------
  api_gateway:
    <<: *node-base
    build:
      context: ../../gateway
      dockerfile: ../deploy/test/Dockerfile
    volumes:
      - ../../gateway/src:/usr/app/src
    ports:
      - "3000:3000"
    command: /bin/sh -c "npm run start:dev"
    
# -----------------------------------------------
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - internal_network
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "nc", "-zv", "kafka", "9092"]
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 30s